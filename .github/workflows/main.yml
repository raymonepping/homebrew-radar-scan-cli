name: Vault Radar Scan (via Container)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  vault-radar:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üíæ Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-vault-radar-cli
          restore-keys: |
            ${{ runner.os }}-

      - name: üîÑ Pull image (warm cache)
        run: docker pull repping/vault-radar-cli:latest || true

      - name: üõ°Ô∏è Run Vault Radar inside container
        env:
          HCP_CLIENT_ID: ${{ secrets.HCP_CLIENT_ID }}
          HCP_CLIENT_SECRET: ${{ secrets.HCP_CLIENT_SECRET }}
          HCP_PROJECT_ID: ${{ secrets.HCP_PROJECT_ID }}
        run: |
          docker run --rm \
            --platform linux/amd64 \
            --env HCP_CLIENT_ID \
            --env HCP_CLIENT_SECRET \
            --env HCP_PROJECT_ID \
            -v "$PWD":/data \
            -w /data \
            repping/vault-radar-cli \
            scan folder \
            --path . \
            --disable-ui \
            --outfile scan_file.csv \
            --format csv

          EXIT_CODE=$?

          if [[ -f scan_file.csv ]]; then
            echo "‚úÖ scan_file generated"
            echo ""
            echo "üîç Vault Radar Findings:"
            echo "------------------------"
            cat scan_file.csv
            echo "------------------------"
          else
            echo "‚ùå scan_file NOT generated"
            ls -lh
          fi

          mkdir -p findings
          mv scan_file.csv findings/ || true

          # ‚ö†Ô∏è Warn if medium findings are present (non-blocking)
          if grep -qE ',(MEDIUM),' findings/scan_file.csv; then
            echo "‚ö†Ô∏è Medium severity findings detected"
            # Optional: Add `exit 0` if you want to make this block exit early
          fi

          # üö® Fail the job if high or critical findings are present
          if grep -qE ',(HIGH|CRITICAL),' findings/scan_file.csv; then
            echo "‚ùå Blocking due to high or critical severity findings"
            exit 1
          fi

          exit $EXIT_CODE

      - name: üì¶ Archive scan results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: radar-scan-results
          path: findings/scan_file.csv
