name: Vault Radar Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  vault-radar:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Bash dependencies
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Debug HCP Env Vars (safe)
      run: |
        echo "HCP_CLIENT_ID: ${HCP_CLIENT_ID:+set}"
        echo "HCP_CLIENT_SECRET: ${HCP_CLIENT_SECRET:+set}"
        echo "HCP_PROJECT_ID: ${HCP_PROJECT_ID:+set}"
      env:
        HCP_CLIENT_ID: ${{ secrets.HCP_CLIENT_ID }}
        HCP_CLIENT_SECRET: ${{ secrets.HCP_CLIENT_SECRET }}
        HCP_PROJECT_ID: ${{ secrets.HCP_PROJECT_ID }}

    - name: Run radar_scan (Bash CLI)
      env:
        HCP_CLIENT_ID: ${{ secrets.HCP_CLIENT_ID }}
        HCP_CLIENT_SECRET: ${{ secrets.HCP_CLIENT_SECRET }}
        HCP_PROJECT_ID: ${{ secrets.HCP_PROJECT_ID }}
      run: |
        chmod +x bin/radar_scan
        bin/radar_scan --type folder . --outfile scan_file --format csv --disable-ui || exit_code=$?
        if [ -f scan_file ]; then
          echo "✅ scan_file generated"
          cat scan_file
        else
          echo "❌ scan_file NOT generated"
          ls -lh .
          exit 2
        fi
        # Archive artifact for all builds
        mkdir -p findings
        mv scan_file findings/
        exit ${exit_code:-0}

    - name: Archive radar_scan findings
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: radar-scan-results
        path: findings/scan_file
